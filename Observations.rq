#+ summary: "Retrieves all the information about ILIAD Observations"
#+ description: "NOTE: make sure response content type is application/json"
#+ endpoint: "http://metaphactory.foodie-cloud.org/sparql?repository=ephedra"
#+ tags:
#+   - json
#+ method: GET
#+ limit: 100
#+ offset: 0
#+ endpoint_in_url: False
#+ transform: {
#+   "description": "?info",
#+   "$anchor": "description",
#+   "@iot.count": "?total",
#+   "@iot.nextLink": "?next_link",
#+   "value": {
#+     "@iot.id": "?id",
#+     "@iot.selfLink": "?id_link",
#+     "phenomenonTime": "?resultTime",
#+     "resultTime": "?resultTime",
#+     "result": "?temperature",
#+     "Datastream@iot.navigationLink": "?datastream_link",
#+     "FeatureOfInterest@iot.navigationLink": "?feature_link",
#+   }
#+ }

SELECT (MD5(STR(?resultTime)) AS ?id) ?resultTime ?temperature ?cfTemp 
WHERE {
   	BIND("2023-08-07"^^xsd:string as ?inputDate)
   	BIND("52.52"^^xsd:number as ?inputLat)
	  BIND("13.4"^^xsd:number as ?inputLong)
  	BIND("http://vocab.nerc.ac.uk/standard_name/air_temperature/" as ?cfTemp)
	  SERVICE <http://www.metaphacts.com/ontologies/platform/repository/federation#brightskyWeatherData> {
	  ## inputs
    	?results dct:date ?inputDate .
	    ?results geo84:lat ?inputLat .
    	?results geo84:long ?inputLong .    
	  ## outputs    
    	?results sosa:resultTime ?resultTime .
	    ?results sdmw:temperature ?temperature .           
	  }
	  
	  
		BIND ("OGC SensorThings API - Observations" as ?info)	  
    BIND (REPLACE(STR(?s), "^.*/([^/]*)$", "$1") as ?id)
    BIND (URI(CONCAT('https://w3id.org/ad4gd/berlin/weather/api/v1.0/Observations(', ?id,')')) AS ?id_link)
    BIND (URI(CONCAT('https://w3id.org/ad4gd/berlin/weather/api/v1.0/Observations(', ?id,')/Datastream')) AS ?datastream_link)
    BIND (URI(CONCAT('https://w3id.org/ad4gd/berlin/weather/api/v1.0/Observations(', ?id,')/FeatureOfInterest')) AS ?feature_link)
    BIND("25"^^xsd:integer as ?total)
    BIND (URI(CONCAT('https://w3id.org/ad4gd/berlin/weather/api/v1.0/Observations?$top=',xsd:integer(?_limit),'&$skip=', xsd:integer(COALESCE(?_offset, 0))+xsd:integer(?_limit))) AS ?next_link)
}
